name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches:
      - develop
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - run: npm ci

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Test Drive a private action
        uses: ./.github/actions/hello
        id: hello
        with:
          who-to-greet: "World"
      - run: |
          echo "Time: ${{ steps.hello.outputs.time }}"

      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload coveragereport
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage
      - name: Build project
        run: npm run build --if-present
      - name: Upload build package
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - name: Package assets for release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Heroku
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && env.HEROKU_APIKEY != null }}
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ env.HEROKU_APIKEY }}
          heroku_app_name: "greactapp"
          heroku_email: ${{ env.HEROKU_EMAIL }}
        env:
          HEROKU_APIKEY: ${{ secrets.HEROKU_APIKEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
